export function GET(){ return new Response(JSON.stringify({error:'Method Not Allowed'}), { status:405, headers:{'Content-Type':'application/json','Allow':'POST'} }); }
import { NextResponse } from 'next/server'; import { prisma } from '@/lib/db'; import { setAuthCookie, signToken } from '@/lib/auth'; import bcrypt from 'bcryptjs'; export async function POST(req:Request){const f=await req.formData(); const email=String(f.get('email')||'').toLowerCase(); const password=String(f.get('password')||''); const user=await prisma.user.findUnique({where:{email}}); if(!user) return NextResponse.json({error:'Onjuiste inloggegevens'},{status:400}); const ok=await bcrypt.compare(password, user.passwordHash); if(!ok) return NextResponse.json({error:'Onjuiste inloggegevens'},{status:400}); const token=signToken({id:user.id}); setAuthCookie(token); return NextResponse.redirect(new URL('/dashboard', req.url)); }
